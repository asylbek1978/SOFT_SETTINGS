
site
	https://spring.io/quickstart

Spring boot
	https://spring.io/projects/spring-boot
	https://docs.spring.io/spring-boot/docs/2.1.9.RELEASE/maven-plugin/stop-mojo.html

JDK
	BellSoft Liberica JDK
	 	https://bell-sw.com/
	 		LTS versions (long-term support)
	 		11 version
		 		https://bell-sw.com/pages/downloads/#/java-11-lts
		 		Linux Standard JDK
		 			https://download.bell-sw.com/java/11.0.16.1+1/bellsoft-jdk11.0.16.1+1-linux-amd64.deb
		 			https://download.bell-sw.com/java/11.0.16.1+1/bellsoft-jdk11.0.16.1+1-linux-amd64.rpm
		 			https://download.bell-sw.com/java/11.0.16.1+1/bellsoft-jdk11.0.16.1+1-linux-amd64.tar.gz
		 	17 version
		 		https://bell-sw.com/pages/downloads/#/java-17-current -> Download now
		 		Linux Standard JDK
		 			Liberica Standard JDK 17.0.4.1+1 x86 64 bit for Linux
		 			https://download.bell-sw.com/java/17.0.4.1+1/bellsoft-jdk17.0.4.1+1-linux-amd64.deb
		 			https://download.bell-sw.com/java/17.0.4.1+1/bellsoft-jdk17.0.4.1+1-linux-amd64.rpm
		 			https://download.bell-sw.com/java/17.0.4.1+1/bellsoft-jdk17.0.4.1+1-linux-amd64.tar.gz
	 	install
	 		sudo dpkg -i /home/asylbek/Downloads/SOFT_LINUX/java/bellsoft/bellsoft-jdk11.0.16.1+1-linux-amd64.deb
	 		sudo dpkg -i /home/asylbek/Downloads/SOFT_LINUX/java/bellsoft/bellsoft-jdk17.0.4.1+1-linux-amd64.deb

//-------------------------------------------------
Guides
	https://spring.io/guides#gs
Spring quick start
https://spring.io/quickstart
	https://start.spring.io/
		Project: Maven Project
		Spring boot: 2.7.3
		Project Metadata
			Group: com.example
			Artifact: demo
			Name: demo
			Description: Demo project for Spring Boot
			Package name: com.example.demo
			Packaging: Jar
			Java: 17
		Add dependency "Spring Web"
		Generate
			demo.zip 
		Share: https://start.spring.io/#!type=maven-project&language=java&platformVersion=2.7.3&packaging=jar&jvmVersion=17&groupId=com.example&artifactId=demo&name=demo&description=Demo%20project%20for%20Spring%20Boot&packageName=com.example.demo&dependencies=web

	mkdir /usr/local/tomcat/webapps/demo
	mv /home/asylbek/spring_java/demo /usr/local/tomcat/webapps/demo
	cd /usr/local/tomcat/webapps/demo

	check project required JDK version, so we need JAVA_HOME environment version at least 17
		subl /usr/local/tomcat/webapps/demo/pom.xml
			<properties>
				<java.version>17</java.version>
			</properties>
	code of demo 
		/usr/local/tomcat/webapps/demo/src/main/java/com/example/demo/DemoApplication.java
		in DemoApplication.java
	start maven
		/usr/local/tomcat/webapps/demo/mvnw spring-boot:run
		./mvnw spring-boot:run
			[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:compile (default-compile) on project demo: Fatal error compiling: error: invalid target release: 17 -> [Help 1]
				Solution:
				$ echo $JAVA_HOME
				change JAVA_HOME environment to 17 version

			//To see the full stack trace of the errors, re-run Maven with the -e switch.
			//Re-run Maven using the -X switch to enable full debug logging.
		./mvnw -e spring-boot:run
			Error stacktraces are turned on.
			...

		./mvnw -e spring-boot:run
			[ERROR] Re-run Maven using the -X switch to enable full debug logging.
			[ERROR] 
			[ERROR] For more information about the errors and possible solutions, please read the following articles:
			[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException

			//Re-run Maven using the -X switch to enable full debug logging.
		./mvnw -X spring-boot:run

		http://localhost:8080/hello
			Hello World!
		http://localhost:8080/hello?name=Asylbek
			Hello Asylbek!	
	stop maven
		./mvnw spring-boot:stop
		|
		ctrl-c

//------------------------------
who uses port 8080
	sudo lsof -i:8080
		COMMAND    PID    USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME
		java    276675 asylbek   34u  IPv6 2119198      0t0  TCP *:http-alt (LISTEN)

kill the process
	pkill -9 276675
//------------------------------

### Reference Documentation
For further reference, please consider the following sections:

* [Official Apache Maven documentation](https://maven.apache.org/guides/index.html)
* [Spring Boot Maven Plugin Reference Guide](https://docs.spring.io/spring-boot/docs/2.7.3/maven-plugin/reference/html/)
* [Create an OCI image](https://docs.spring.io/spring-boot/docs/2.7.3/maven-plugin/reference/html/#build-image)
* [Spring Web](https://docs.spring.io/spring-boot/docs/2.7.3/reference/htmlsingle/#web)

### Guides
The following guides illustrate how to use some features concretely:

* [Building a RESTful Web Service](https://spring.io/guides/gs/rest-service/)
* [Serving Web Content with Spring MVC](https://spring.io/guides/gs/serving-web-content/)
* [Building REST services with Spring](https://spring.io/guides/tutorials/rest/)




https://spring.io/projects/spring-boot
https://projects.spring.io/spring-data-neo4j/
	https://www.neo4j.com/